{
  "name": "mock-gulp-dest",
  "version": "0.1.1",
  "description": "Mock gulp.dest/vinyl-fs.dest for testing purposes. Useful when writing slush generators.",
  "main": "index.js",
  "scripts": {
    "test": "mocha -R spec test/*_test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/slushjs/mock-gulp-dest"
  },
  "keywords": [
    "gulp",
    "mock",
    "vinyl",
    "slush",
    "test"
  ],
  "author": {
    "name": "Joakim Bengtson",
    "email": "joakim@klei.se"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/slushjs/mock-gulp-dest/issues"
  },
  "homepage": "https://github.com/slushjs/mock-gulp-dest",
  "devDependencies": {
    "chai": "~1.9.1",
    "mocha": "~1.18.2",
    "vinyl": "~0.2.3"
  },
  "dependencies": {
    "through2": "^0.5.1"
  },
  "readme": "mock-gulp-dest\n=================\n\n> Mock gulp.dest/vinyl-fs.dest for testing purposes. Useful when writing slush generators.\n\n## Installation\n\n```bash\nnpm install --save mock-gulp-dest\n```\n\n## Usage\n\nWithin your test do:\n\n```javascript\nvar gulp = require('gulp'),\n    mockGulpDest = require('mock-gulp-dest')(gulp);\n\n// Load all slush generator tasks:\nrequire('../slushfile');\n\ndescribe('a slush generator test', function() {\n  it('should generate project files', function(done) {\n    // Run the default task in the current slush generator:\n    gulp.start('default')\n      .on('stop', function () {\n        // Taking a file path as a string:\n        mockGulpDest.assertDestContains('package.json');\n        // Multiple files as array:\n        mockGulpDest.assertDestContains([\n          'package.json',\n          'src/index.js'\n        ]);\n        // Multiple files as a file tree:\n        mockGulpDest.assertDestContains({\n          src: 'index.js',\n          lib: {\n            module: [\n              'file1.js',\n              'file2.js'\n            ],\n            _: 'lib-file.js'\n          },\n          _: [\n            'package.json',\n            'bower.json'\n          ]\n        });\n        done();\n      });\n  });\n});\n```\n\n## API\n\n### cwd()\n\n*Returns* `String`\n\nGet current working directory that `gulp.dest` uses, i.e. either `process.cwd()` or set with `gulp.dest(folder, {cwd: newCwd})`.\n\n### basePath()\n\n*Returns* `String`\n\nGet base path that `gulp.dest` uses, i.e. `cwd() + gulp.dest folder`.\n\n### assertDestContains(filePath)\n\n*Param* `String|Array|Object` filePath\n\nAssert that `gulp.dest` will create given file(s). See example usage above.\n\n### assertDestNotContains(filePath)\n\n*Param* `String|Array|Object` filePath\n\nAssert that `gulp.dest` will not create given file(s). Used in the same way as `assertDestContains()`.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "mock-gulp-dest@0.1.1",
  "_from": "mock-gulp-dest@^0.1.1"
}
